name: Feature Branch CI

on:
  push:
    branches:
    - "feature/*"
  pull_request:
    branches:
    - "feature/*"

jobs:
  pre-ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: 'Block Concurrent Executions'
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  scanning:
    name: GitGuardian scan
    runs-on: ubuntu-latest
    needs: pre-ci
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      - name: GitGuardian scan
        uses: GitGuardian/gg-shield-action@master
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
  build-and-test:
    name: Build & Run Tests
    runs-on: ubuntu-latest
    needs: [pre-ci, scanning]
    steps:
      - uses: actions/checkout@v2
      - name: Fetch all history for all tags and branches
        run:  git fetch --prune --unshallow
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.2
        with:
          versionSpec: '5.x.x'
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.5.0
        with:
          # SDK version to use. Examples: 2.2.104, 3.1, 3.1.x
          dotnet-version: 3.1.x
      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.2
      - run: echo $GITHUB_WORKSPACE
      - name: Restore Node Packages
        run: npm install -cwd $GITHUB_WORKSPACE/SPMS.Web/
      - run: dotnet build SPMS.sln
      - run: dotnet test SPMS.sln
  create_pr:
    needs: [pre-ci, scanning, build-and-test]
    name: Open Draft PR for merging feature
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: pull-request
        uses: repo-sync/pull-request@v2
        with:
          pr_title: "Pulling ${{ github.ref }} into main" # Title of pull request
          pr_template: ".github/feature_pr_template.md"   # Path to pull request template, requires pr_title to be set, excludes pr_body
          pr_label: "auto-pr"                               # Comma-separated list (no spaces)
          pr_milestone: "Beta"                              # Milestone name
          pr_draft: true                                    # Creates pull request as draft
          github_token: ${{ secrets.GITHUB_TOKEN }}
    
